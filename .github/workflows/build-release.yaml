name: Build and Release Python Docker Image

on:
  pull_request:
    branches:
      - main
    types: [closed]  # Trigger on PR creation, updates, and closure

  push:
    branches:
      - main  # Triggered on pushing to the main branch

jobs:
  pre-commit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH="$HOME/.poetry/bin:$PATH"

      - name: Install Pre-commit
        run: python -m pip install pre-commit

      - name: Install dependencies with Poetry
        run: |
          poetry install --no-interaction  # Install production dependencies

      - name: Install Pre-commit hooks
        run: |
          poetry run pre-commit install  # Install pre-commit hooks

      - name: Run pre-commit hooks
        run: |
          poetry run pre-commit run --all-files  # Run pre-commit hooks for all files

  build:
    needs: pre-commit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/toml-sort-app:latest .
          docker tag ${{ secrets.DOCKER_USERNAME }}/python-toml-app:latest ${{ secrets.DOCKER_USERNAME }}/python-toml-app:${{ github.sha }}

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/toml-sort-app:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/toml-sort-app:${{ github.sha }}